/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import static GUI.TablaLiquidacion.tabla;
import controlador.ControladorCuentaCorriente;
import controlador.ControladorLiquidacion;
import controlador.ControladorObraSocial;
import controlador.ControladorProfesional;
import controlador.TableCellListener;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import modelo.ConceptoLiquidacion;
import modelo.CuentaCuotas;
import modelo.DetalleLiquidacion;
import modelo.Liquidacion;
import modelo.Material;
import modelo.ObraSocial;
import modelo.Profesional;
import utilidades.Mensaje;

/**
 *
 * @author COCO
 */
public class FormularioLiquidacion extends javax.swing.JDialog {

    private DefaultTableModel modelo = new DefaultTableModel();
    private DefaultTableColumnModel modeloColumnas = new DefaultTableColumnModel();
    
    ArrayList<Material> materiales;
    ArrayList<Profesional> profesionales;
    
    String obrasocial = "";
   // DefaultComboBoxModel modeloProfesionales = new DefaultComboBoxModel();
    DefaultComboBoxModel modeloObrasSociales = new DefaultComboBoxModel();
    private ArrayList<ObraSocial> obras;
    private int idLiquidacion;
    
    /**
     * Creates new form FormularioLiquidacion
     */
    public FormularioLiquidacion() {
        initComponents();
        setModal(true);
        setLocationRelativeTo(null);
        setResizable(false);
        
        modelo = (DefaultTableModel) jTable1.getModel();
        modeloColumnas = (DefaultTableColumnModel) jTable1.getColumnModel();
        
        llenarObrasSociales();
        
        llenarTodo();
        
        
    }
    
    
    /**
     * Llena el comboBox de las obras sociales cargadas en el sistema
     */
     private void llenarObrasSociales(){
    
        modeloObrasSociales.addElement("");
        
        obras = new ArrayList<>();
        ControladorObraSocial.getObrasSociales(obras);
        for(ObraSocial obra : obras){
        
            modeloObrasSociales.addElement(obra.getNombre());
        }
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        obraSocialComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        fechaRecibidaTextField = new javax.swing.JTextField();
        fechaPagoTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TotalTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombreTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        obraSocialComboBox.setModel(modeloObrasSociales);
        obraSocialComboBox.setToolTipText("");
        obraSocialComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                obraSocialComboBoxItemStateChanged(evt);
            }
        });
        obraSocialComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obraSocialComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Obra Social:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Profesional", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Action action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                TableCellListener tcl = (TableCellListener)e.getSource();
                Float newValue = (Float) tcl.getNewValue();
                Float oldValue = (Float) tcl.getOldValue();
                Float importe = Float.parseFloat(TotalTxt.getText());
                if(tcl.getColumn()==1){
                    importe= importe - oldValue + newValue;
                    TotalTxt.setText(Float.toString(importe));
                }
            }

        };

        TableCellListener tcl = new TableCellListener(jTable1, action);
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Fecha recibida:");

        fechaRecibidaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaRecibidaTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha pago:");

        TotalTxt.setEditable(false);
        TotalTxt.setText(String.valueOf(0f));
        TotalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalTxtActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre liquidaci√≥n:");

        nombreTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextField1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(TotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(obraSocialComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fechaRecibidaTextField)
                                        .addComponent(fechaPagoTextField)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(10, 10, 10)
                                    .addComponent(nombreTextField1)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(obraSocialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fechaRecibidaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(fechaPagoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {TotalTxt, fechaRecibidaTextField, obraSocialComboBox});

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTitulo.setText("Nueva Liquidaci√≥n");

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(109, 109, 109)
                                    .addComponent(jLabelTitulo))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(116, 116, 116)
                                    .addComponent(jButton1)
                                    .addGap(42, 42, 42)
                                    .addComponent(jButton2))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String fecharecibida = this.fechaRecibidaTextField.getText();
        String fechapago = this.fechaPagoTextField.getText();
        String importeString = this.TotalTxt.getText();
        String nombreString = this.nombreTextField1.getText();
        
        //Verificar que todos los datos hayan sido completados
        if (!importeString.isEmpty() && !fecharecibida.isEmpty() && !fechapago.isEmpty()){
            
            // Verificar importe total = suma de importes profesionales
            Float importe;
            importe = Float.parseFloat(importeString);
            
            Float suma = 0f;
            
            for(int i = jTable1.getRowCount() - 1; i >= 0; i--){
                
                Float importeprof = (Float) modelo.getValueAt(i, 1) ;
                suma += importeprof;
        
            }
            
            if (java.lang.Float.compare(importe, suma)==0){
                // Almacenar la liquidaci√≥n y calcular
                Liquidacion liquidacion = new Liquidacion();
                int idobrasocial = ControladorObraSocial.getIdObraSocial(obrasocial);
                
                liquidacion.setIdObraSocial(idobrasocial);
                liquidacion.setFechaPago(fechapago);
                liquidacion.setFechaRecibida(fecharecibida);
                liquidacion.setImporte(importeString);
                liquidacion.setNombre(nombreString);
                
                ArrayList<DetalleLiquidacion> detalles = new ArrayList<>();
                DetalleLiquidacion detalle = new DetalleLiquidacion();
                liquidacion.setDetalles(detalles);

                String resultado = ControladorLiquidacion.insertarLiquidacion(liquidacion);
                idLiquidacion = ControladorLiquidacion.getIdLiquidacion(liquidacion);
                
                liquidacion.setIdLiquidacion(idLiquidacion);
                
                // Obtener lista de profesionales y sus importes
                 for(int i = jTable1.getRowCount()-1; i >= 0; i--){
              
                    Float importeprof = (Float) modelo.getValueAt(i, 1);
                    
                    if (java.lang.Float.compare(importeprof, 0f)!=0){

                        detalle.setAtributo(importeprof);
                        String nombre = String.valueOf(jTable1.getValueAt(i, 0));
                        Profesional profesional = new Profesional();
                        profesional.setNombre(nombre);

                        ControladorProfesional.getDatosNombre(profesional);
                        detalle.setMatricula(profesional.getMatricula());
                        detalle.setIdLiquidacion(idLiquidacion);

                        ControladorLiquidacion.insertarDetalleLiquidacion(detalle, idLiquidacion);
                    }
                 }
               
                if(resultado.equals("")){  //No hubo error
                    //Mostrar liquidaci√≥n calculada
                    TablaLiquidacion form = new TablaLiquidacion(idLiquidacion);
                    form.setVisible(true); 
                }
                else Mensaje.mostrarMensaje(rootPane, "Error al agregar intentar crear la liquidaci√≥n:\n" + resultado, "Error", JOptionPane.ERROR_MESSAGE);
            
            dispose();
                
            }
            else{
                JOptionPane.showMessageDialog(null, "El importe total debe coincidir con la suma de los importes de los profesionales.");
            }                 
        }
        else{
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos");
        }
        
      
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void obraSocialComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_obraSocialComboBoxItemStateChanged
        // TODO add your handling code here:
        obrasocial = this.obraSocialComboBox.getSelectedItem().toString();
       // if(!obrasocial.isEmpty()){
            llenarTodo();
       // }
    }//GEN-LAST:event_obraSocialComboBoxItemStateChanged

    private void obraSocialComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obraSocialComboBoxActionPerformed
        // TODO add your handling code here:
       
        /*
                obrasocial = this.jComboBox1.getSelectedItem().toString();
        llenarTodo();
                */
        
    }//GEN-LAST:event_obraSocialComboBoxActionPerformed

    private void fechaRecibidaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaRecibidaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaRecibidaTextFieldActionPerformed

    private void TotalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalTxtActionPerformed

    private void nombreTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TotalTxt;
    private javax.swing.JTextField fechaPagoTextField;
    private javax.swing.JTextField fechaRecibidaTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombreTextField1;
    private javax.swing.JComboBox obraSocialComboBox;
    // End of variables declaration//GEN-END:variables

    private void llenarTodo() {
        
        for(int i = jTable1.getRowCount() - 1; i >= 0; i--){
        
            modelo.removeRow(i);
        
        }
        
       // profesionales.clear();
        
        
        
        if (!obrasocial.isEmpty()){
        
            profesionales = new ArrayList<>();
            
            ControladorProfesional.getProfesionales(profesionales, obrasocial);

            for(Profesional profesional : profesionales){

                Object[] data = { profesional.getNombre(), 0f };
                modelo.addRow(data);


            }
        }
        
    }
}
